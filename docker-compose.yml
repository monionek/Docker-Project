
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    env_file:
      - ./backend/.env
    ports:
      - "5000:5000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health/healthCheck"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./backend:/app
    command: npm run dev

  frontend:
    build:
      context: ./frontend/my-app
      dockerfile: Dockerfile
    depends_on:
      - backend
    env_file:
    - ./frontend/my-app/.env.docker
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./frontend/my-app:/app
    command: npm run dev

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
